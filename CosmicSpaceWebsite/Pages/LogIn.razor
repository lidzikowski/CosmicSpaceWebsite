@page "/login"

@inject HttpClient Http
@inject NavigationManager navigationManager
@inject ISessionStorageService sessionStorage

@inject IToastService toastService



@if (User == null)
{
    <h1>Logowanie</h1>

    if (Loading)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            <label for="usernameInput">Nazwa użytkownika</label>
            <input type="text" class="form-control" id="usernameInput" placeholder="Nazwa użytkownika" @bind="@Username" />
        </div>
        <div class="form-group">
            <label for="passwordInput">Hasło</label>
            <input type="password" class="form-control" id="passwordInput" placeholder="Hasło" @bind="@Password" />
        </div>
        <button class="btn btn-primary" @onclick="OnLogin">Zaloguj</button>
    }
}

@code {
    private Users User;

    private bool Loading;

    private string Username;
    private string Password;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            User = await sessionStorage.GetItemAsync<Users>("user");

            if (User != null)
            {
                navigationManager.NavigateTo("/");
            }
        }
        catch { }
    }

    public async Task OnLogin()
    {
        if (string.IsNullOrWhiteSpace(Username) || string.IsNullOrWhiteSpace(Password))
            return;

        Loading = true;

        User = await Utils.HttpGetAsync<Users>(Http, ApiTypeService.user, ApiService.GetUser, new Dictionary<string, object>()
        {
            { "username", Hash.HashString(Username) },
            { "password", Hash.HashString(Password) }
        });

        if (User != null)
        {
            await sessionStorage.SetItemAsync("user", User);
            navigationManager.NavigateTo("/", true);
        }
        else
            toastService.ShowError("Błąd podczas logowania.");

        Loading = false;
    }
}